function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from "react";
import styled from "styled-components";
import theme from "../../themes";
const Container = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  width: ${props => props.width};
  height: ${props => props.height};
  background-color: transparent;
  & table {
    width: 100%;
    height: 100%;
  }
`;
const Control = styled.div`
  display: inline-block;
`;
const Crown = styled.div`
  position: absolute;
  top: 50%;
  left: 15px;
  transform: translateY(-50%);
`;
export default class StylishCenter extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      controls1: null,
      controls2: null
    });
  }

  componentDidMount() {
    const marginMod = "6px";

    if (this.props.controls.length > 0) {
      const controls = [];
      this.props.controls.map((el, i) => controls.push( /*#__PURE__*/React.createElement(Control, {
        style: {
          marginLeft: marginMod
        }
      }, el)));
      this.setState({
        controls: controls.reverse()
      });
    }
  }

  render() {
    const marginMod = 10;
    return /*#__PURE__*/React.createElement(Container, {
      width: this.props.width,
      height: this.props.height
    }, /*#__PURE__*/React.createElement("table", null, /*#__PURE__*/React.createElement("tbody", null, /*#__PURE__*/React.createElement("tr", null, /*#__PURE__*/React.createElement("td", {
      align: "right",
      width: "100%"
    }, this.state.controls)))), /*#__PURE__*/React.createElement(Crown, null, this.props.crown), this.props.textDisplay && this.props.textDisplay.left ? /*#__PURE__*/React.createElement("div", {
      style: {
        position: "absolute",
        bottom: `${marginMod}px`,
        left: `${marginMod}px`
      }
    }, this.props.textDisplay.left) : null, this.props.textDisplay && this.props.textDisplay.center ? /*#__PURE__*/React.createElement("div", {
      style: {
        position: "absolute",
        bottom: `${marginMod}px`,
        left: "50%",
        transform: "translateX(-50%)"
      }
    }, this.props.textDisplay.center) : null, this.props.textDisplay && this.props.textDisplay.right ? /*#__PURE__*/React.createElement("div", {
      style: {
        position: "absolute",
        bottom: `${marginMod}px`,
        right: `${marginMod}px`
      }
    }, this.props.textDisplay.right) : null);
  }

}