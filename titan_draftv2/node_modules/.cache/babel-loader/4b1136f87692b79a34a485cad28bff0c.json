{"ast":null,"code":"import interfaceMethods from \"./__interfaceMethods__\";\n\nconst render = (canvas, size, coords, style, opacity) => {\n  canvas.globalAlpha = opacity;\n  canvas.beginPath();\n  canvas.arc(coords.x, coords.y, size, 0, 2 * Math.PI, false);\n  canvas.fillStyle = style;\n  canvas.fill();\n};\n\nexport default (canvas => (size, coords, velocity, mass, bounceFactor, style, opacity) => {\n  render(canvas, size, coords, style, opacity);\n  return interfaceMethods(canvas, {\n    size,\n    coords,\n    velocityX: velocity.x,\n    velocityY: velocity.y,\n    mass,\n    bounceFactor,\n    style,\n    opacity\n  }, render);\n});","map":{"version":3,"sources":["/Users/brocroberts/Documents/Code/titanesports/titan_draftv2/node_modules/arclight-react/dist/Particles/builders/_sphere.js"],"names":["interfaceMethods","render","canvas","size","coords","style","opacity","globalAlpha","beginPath","arc","x","y","Math","PI","fillStyle","fill","velocity","mass","bounceFactor","velocityX","velocityY"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,wBAA7B;;AAEA,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,KAA0C;AACvDJ,EAAAA,MAAM,CAACK,WAAP,GAAqBD,OAArB;AACAJ,EAAAA,MAAM,CAACM,SAAP;AACAN,EAAAA,MAAM,CAACO,GAAP,CAAWL,MAAM,CAACM,CAAlB,EAAqBN,MAAM,CAACO,CAA5B,EAA+BR,IAA/B,EAAqC,CAArC,EAAwC,IAAIS,IAAI,CAACC,EAAjD,EAAqD,KAArD;AACAX,EAAAA,MAAM,CAACY,SAAP,GAAmBT,KAAnB;AACAH,EAAAA,MAAM,CAACa,IAAP;AACD,CAND;;AAQA,gBAAgBb,MAAM,IAAI,CAACC,IAAD,EAAOC,MAAP,EAAeY,QAAf,EAAyBC,IAAzB,EAA+BC,YAA/B,EAA6Cb,KAA7C,EAAoDC,OAApD,KAAgE;AACxFL,EAAAA,MAAM,CAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,CAAN;AACA,SAAON,gBAAgB,CAACE,MAAD,EAAS;AAC9BC,IAAAA,IAD8B;AAE9BC,IAAAA,MAF8B;AAG9Be,IAAAA,SAAS,EAAEH,QAAQ,CAACN,CAHU;AAI9BU,IAAAA,SAAS,EAAEJ,QAAQ,CAACL,CAJU;AAK9BM,IAAAA,IAL8B;AAM9BC,IAAAA,YAN8B;AAO9Bb,IAAAA,KAP8B;AAQ9BC,IAAAA;AAR8B,GAAT,EASpBL,MAToB,CAAvB;AAUD,CAZD","sourcesContent":["import interfaceMethods from \"./__interfaceMethods__\";\n\nconst render = (canvas, size, coords, style, opacity) => {\n  canvas.globalAlpha = opacity;\n  canvas.beginPath();\n  canvas.arc(coords.x, coords.y, size, 0, 2 * Math.PI, false);\n  canvas.fillStyle = style;\n  canvas.fill();\n};\n\nexport default (canvas => (size, coords, velocity, mass, bounceFactor, style, opacity) => {\n  render(canvas, size, coords, style, opacity);\n  return interfaceMethods(canvas, {\n    size,\n    coords,\n    velocityX: velocity.x,\n    velocityY: velocity.y,\n    mass,\n    bounceFactor,\n    style,\n    opacity\n  }, render);\n});"]},"metadata":{},"sourceType":"module"}