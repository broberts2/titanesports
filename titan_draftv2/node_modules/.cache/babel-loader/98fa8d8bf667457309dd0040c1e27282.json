{"ast":null,"code":"import interfaceMethods from \"./__interfaceMethods__\";\n\nconst render = (canvas, size, coords, style, opacity) => {\n  canvas.globalAlpha = opacity;\n  canvas.fillStyle = style;\n  canvas.fillRect(coords.x, coords.y, size.width, size.height);\n  canvas.globalAlpha = 1;\n};\n\nexport default (canvas => (size, coords, velocity, mass, bounceFactor, style, opacity) => {\n  render(canvas, size, coords, style, opacity);\n  return interfaceMethods(canvas, {\n    size,\n    coords,\n    velocityX: velocity.x,\n    velocityY: velocity.y,\n    mass,\n    bounceFactor,\n    style,\n    opacity\n  }, render);\n});","map":{"version":3,"sources":["/Users/brocroberts/Documents/Code/titanesports/titan_draftv2/node_modules/arclight-react/dist/components/Particles/builders/_rectangle.js"],"names":["interfaceMethods","render","canvas","size","coords","style","opacity","globalAlpha","fillStyle","fillRect","x","y","width","height","velocity","mass","bounceFactor","velocityX","velocityY"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,wBAA7B;;AAEA,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,KAA0C;AACvDJ,EAAAA,MAAM,CAACK,WAAP,GAAqBD,OAArB;AACAJ,EAAAA,MAAM,CAACM,SAAP,GAAmBH,KAAnB;AACAH,EAAAA,MAAM,CAACO,QAAP,CAAgBL,MAAM,CAACM,CAAvB,EAA0BN,MAAM,CAACO,CAAjC,EAAoCR,IAAI,CAACS,KAAzC,EAAgDT,IAAI,CAACU,MAArD;AACAX,EAAAA,MAAM,CAACK,WAAP,GAAqB,CAArB;AACD,CALD;;AAOA,gBAAgBL,MAAM,IAAI,CAACC,IAAD,EAAOC,MAAP,EAAeU,QAAf,EAAyBC,IAAzB,EAA+BC,YAA/B,EAA6CX,KAA7C,EAAoDC,OAApD,KAAgE;AACxFL,EAAAA,MAAM,CAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,CAAN;AACA,SAAON,gBAAgB,CAACE,MAAD,EAAS;AAC9BC,IAAAA,IAD8B;AAE9BC,IAAAA,MAF8B;AAG9Ba,IAAAA,SAAS,EAAEH,QAAQ,CAACJ,CAHU;AAI9BQ,IAAAA,SAAS,EAAEJ,QAAQ,CAACH,CAJU;AAK9BI,IAAAA,IAL8B;AAM9BC,IAAAA,YAN8B;AAO9BX,IAAAA,KAP8B;AAQ9BC,IAAAA;AAR8B,GAAT,EASpBL,MAToB,CAAvB;AAUD,CAZD","sourcesContent":["import interfaceMethods from \"./__interfaceMethods__\";\n\nconst render = (canvas, size, coords, style, opacity) => {\n  canvas.globalAlpha = opacity;\n  canvas.fillStyle = style;\n  canvas.fillRect(coords.x, coords.y, size.width, size.height);\n  canvas.globalAlpha = 1;\n};\n\nexport default (canvas => (size, coords, velocity, mass, bounceFactor, style, opacity) => {\n  render(canvas, size, coords, style, opacity);\n  return interfaceMethods(canvas, {\n    size,\n    coords,\n    velocityX: velocity.x,\n    velocityY: velocity.y,\n    mass,\n    bounceFactor,\n    style,\n    opacity\n  }, render);\n});"]},"metadata":{},"sourceType":"module"}