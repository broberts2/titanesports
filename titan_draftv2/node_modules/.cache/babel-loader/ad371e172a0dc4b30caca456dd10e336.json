{"ast":null,"code":"import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { Transition } from \"../index\";\nimport theme from \"../themes\";\nconst HoverCard = styled.div`\n  ${props => props.onClick ? \"cursor: pointer;\" : null}\n  background-color: transparent;\n  width: ${props => props.size.width};\n  height: ${props => props.size.height};\n  perspective: 1000px;\n  margin: 0px;\n`;\nconst FlipCardInner = styled.div`\n  position: relative;\n  text-align: center;\n  transform-style: preserve-3d;\n  transition: transform 0.5s;\n  & img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n  background-color: transparent;\n`;\nconst FlipCardFront = styled.div`\n  background-color: transparent;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  background-color: ${props => theme[props.theme].backgroundColor};\n  color: ${props => theme[props.theme].textColor};\n`;\nconst FlipCardBack = styled.div`\n  background-color: transparent;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  background-color: ${props => theme[props.theme].backgroundColor};\n  color: ${props => theme[props.theme].textColor};\n  transform: rotateY(180deg);\n`;\nconst FlipCardBackBorder = styled.div`\n  background-color: transparent;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  width: 99%;\n  height: 99%;\n  border: ${props => `3px solid ${theme[props.theme].backgroundColor}`};\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  z-index: 0;\n`;\nexport default /*#__PURE__*/React.memo(props => {\n  const [state, setState] = React.useState({\n    hovering: false\n  });\n  return /*#__PURE__*/React.createElement(Transition, {\n    trans: props.trans\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme\n  }, /*#__PURE__*/React.createElement(HoverCard, {\n    size: props.size,\n    onClick: () => props.onClick ? props.onClick(state.hovering) : null,\n    onMouseOver: () => {\n      setState({\n        hovering: true\n      });\n      if (props.onHover) props.onHover();\n    },\n    onMouseLeave: () => {\n      setState({\n        hovering: false\n      });\n      if (props.onExit) props.onExit();\n    }\n  }, /*#__PURE__*/React.createElement(FlipCardInner, {\n    style: state.hovering ? {\n      transform: \"rotateY(180deg)\"\n    } : {}\n  }, /*#__PURE__*/React.createElement(FlipCardFront, {\n    theme: props.theme\n  }, props.front), props.showBorder ? /*#__PURE__*/React.createElement(FlipCardBackBorder, {\n    theme: props.theme\n  }) : null, /*#__PURE__*/React.createElement(FlipCardBack, {\n    theme: props.theme\n  }, props.back)))));\n});","map":{"version":3,"sources":["/Users/brocroberts/Documents/Code/titanesports/titan_draftv2/node_modules/arclight-react/dist/HoverCard/HoverCard.js"],"names":["React","styled","ThemeProvider","Transition","theme","HoverCard","div","props","onClick","size","width","height","FlipCardInner","FlipCardFront","backgroundColor","textColor","FlipCardBack","FlipCardBackBorder","memo","state","setState","useState","hovering","createElement","trans","onMouseOver","onHover","onMouseLeave","onExit","style","transform","front","showBorder","back"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { Transition } from \"../index\";\nimport theme from \"../themes\";\nconst HoverCard = styled.div`\n  ${props => props.onClick ? \"cursor: pointer;\" : null}\n  background-color: transparent;\n  width: ${props => props.size.width};\n  height: ${props => props.size.height};\n  perspective: 1000px;\n  margin: 0px;\n`;\nconst FlipCardInner = styled.div`\n  position: relative;\n  text-align: center;\n  transform-style: preserve-3d;\n  transition: transform 0.5s;\n  & img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n  background-color: transparent;\n`;\nconst FlipCardFront = styled.div`\n  background-color: transparent;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  background-color: ${props => theme[props.theme].backgroundColor};\n  color: ${props => theme[props.theme].textColor};\n`;\nconst FlipCardBack = styled.div`\n  background-color: transparent;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  background-color: ${props => theme[props.theme].backgroundColor};\n  color: ${props => theme[props.theme].textColor};\n  transform: rotateY(180deg);\n`;\nconst FlipCardBackBorder = styled.div`\n  background-color: transparent;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  width: 99%;\n  height: 99%;\n  border: ${props => `3px solid ${theme[props.theme].backgroundColor}`};\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  z-index: 0;\n`;\nexport default /*#__PURE__*/React.memo(props => {\n  const [state, setState] = React.useState({\n    hovering: false\n  });\n  return /*#__PURE__*/React.createElement(Transition, {\n    trans: props.trans\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme\n  }, /*#__PURE__*/React.createElement(HoverCard, {\n    size: props.size,\n    onClick: () => props.onClick ? props.onClick(state.hovering) : null,\n    onMouseOver: () => {\n      setState({\n        hovering: true\n      });\n      if (props.onHover) props.onHover();\n    },\n    onMouseLeave: () => {\n      setState({\n        hovering: false\n      });\n      if (props.onExit) props.onExit();\n    }\n  }, /*#__PURE__*/React.createElement(FlipCardInner, {\n    style: state.hovering ? {\n      transform: \"rotateY(180deg)\"\n    } : {}\n  }, /*#__PURE__*/React.createElement(FlipCardFront, {\n    theme: props.theme\n  }, props.front), props.showBorder ? /*#__PURE__*/React.createElement(FlipCardBackBorder, {\n    theme: props.theme\n  }) : null, /*#__PURE__*/React.createElement(FlipCardBack, {\n    theme: props.theme\n  }, props.back)))));\n});"]},"metadata":{},"sourceType":"module"}