{"ast":null,"code":"export default ((canvasWidth, canvasHeight) => (Builders, Origin, particleColor) => {\n  // Particle Container\n  const _ = {}; // Frame Animation\n\n  const _animate_ = (animationList, animName, canvasWidth, canvasHeight) => {\n    let stopAnimation = true;\n\n    for (let i in _) {\n      stopAnimation = false;\n\n      if (_[i].coords.y - _[i].size.height < 0) {\n        _[i].setVelocity(_[i].velocityX, _[i].velocityY < 0 ? -_[i].velocityY : _[i].velocityY);\n      } else if (_[i].coords.y + _[i].size.height > canvasHeight) {\n        _[i].setVelocity(_[i].velocityX * _[i].bounceFactor, _[i].velocityY < 0 ? _[i].velocityY : -_[i].velocityY * _[i].bounceFactor);\n      }\n\n      if (_[i].coords.x + _[i].size.width > canvasWidth || _[i].coords.x < 0) {\n        _[i].setVelocity(-_[i].velocityX, _[i].velocityY);\n      }\n\n      _[i].setVelocity(_[i].velocityX, _[i].velocityY + 0.1 * _[i].mass);\n\n      if (Math.abs(_[i].velocityX) > 0.001 || _[i].coords.y < canvasHeight - _[i].size.height) {\n        _[i].moveAbsoluteBy(_[i].velocityX, _[i].velocityY);\n      } else {\n        if (_[i].opacity > 0.1) {\n          _[i].setOpacity(_[i].opacity - 0.1);\n\n          _[i].moveAbsoluteTo(_[i].coords.x, canvasHeight - _[i].size.height);\n        } else {\n          delete _[i];\n        }\n      }\n    }\n\n    if (stopAnimation) delete animationList[animName];\n  }; // Setup\n\n\n  for (let i = 0; i < 3000; i++) {\n    let size = 2;\n    _[i] = Builders.rectangle({\n      width: size,\n      height: size\n    }, {\n      x: Origin.x - size / 2 + (Math.random() * 80 - 40),\n      y: Origin.y - size / 2 + (Math.random() * 80 - 40)\n    }, {\n      x: Math.random() * 15 - 7.5,\n      y: Math.random() * 10 - Math.random() * 15\n    }, Math.random() * 3 + 1, Math.random() * 0.3 + 0.1, particleColor ? particleColor : \"#660080\", 1);\n  }\n\n  return (animationList, animName) => _animate_(animationList, animName, canvasWidth, canvasHeight);\n});","map":{"version":3,"sources":["/Users/brocroberts/Documents/Code/titanesports/titan_draftv2/node_modules/arclight-react/dist/components/Particles/animations/_cubeExplode.js"],"names":["canvasWidth","canvasHeight","Builders","Origin","particleColor","_","_animate_","animationList","animName","stopAnimation","i","coords","y","size","height","setVelocity","velocityX","velocityY","bounceFactor","x","width","mass","Math","abs","moveAbsoluteBy","opacity","setOpacity","moveAbsoluteTo","rectangle","random"],"mappings":"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","sourcesContent":["export default ((canvasWidth, canvasHeight) => (Builders, Origin, particleColor) => {\n  // Particle Container\n  const _ = {}; // Frame Animation\n\n  const _animate_ = (animationList, animName, canvasWidth, canvasHeight) => {\n    let stopAnimation = true;\n\n    for (let i in _) {\n      stopAnimation = false;\n\n      if (_[i].coords.y - _[i].size.height < 0) {\n        _[i].setVelocity(_[i].velocityX, _[i].velocityY < 0 ? -_[i].velocityY : _[i].velocityY);\n      } else if (_[i].coords.y + _[i].size.height > canvasHeight) {\n        _[i].setVelocity(_[i].velocityX * _[i].bounceFactor, _[i].velocityY < 0 ? _[i].velocityY : -_[i].velocityY * _[i].bounceFactor);\n      }\n\n      if (_[i].coords.x + _[i].size.width > canvasWidth || _[i].coords.x < 0) {\n        _[i].setVelocity(-_[i].velocityX, _[i].velocityY);\n      }\n\n      _[i].setVelocity(_[i].velocityX, _[i].velocityY + 0.1 * _[i].mass);\n\n      if (Math.abs(_[i].velocityX) > 0.001 || _[i].coords.y < canvasHeight - _[i].size.height) {\n        _[i].moveAbsoluteBy(_[i].velocityX, _[i].velocityY);\n      } else {\n        if (_[i].opacity > 0.1) {\n          _[i].setOpacity(_[i].opacity - 0.1);\n\n          _[i].moveAbsoluteTo(_[i].coords.x, canvasHeight - _[i].size.height);\n        } else {\n          delete _[i];\n        }\n      }\n    }\n\n    if (stopAnimation) delete animationList[animName];\n  }; // Setup\n\n\n  for (let i = 0; i < 3000; i++) {\n    let size = 2;\n    _[i] = Builders.rectangle({\n      width: size,\n      height: size\n    }, {\n      x: Origin.x - size / 2 + (Math.random() * 80 - 40),\n      y: Origin.y - size / 2 + (Math.random() * 80 - 40)\n    }, {\n      x: Math.random() * 15 - 7.5,\n      y: Math.random() * 10 - Math.random() * 15\n    }, Math.random() * 3 + 1, Math.random() * 0.3 + 0.1, particleColor ? particleColor : \"#660080\", 1);\n  }\n\n  return (animationList, animName) => _animate_(animationList, animName, canvasWidth, canvasHeight);\n});"]},"metadata":{},"sourceType":"module"}