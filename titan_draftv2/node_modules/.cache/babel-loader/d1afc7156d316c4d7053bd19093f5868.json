{"ast":null,"code":"import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../themes\";\nimport builders from \"./builders/builders\";\nimport animations from \"./animations/index\";\nimport { Transition } from \"../index\";\nconst Particles = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sizeRef = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.state = {\n      suspendClear: false,\n      animationsList: {},\n      width: this.props.width ? this.props.width : this.sizeRef.current.clientWidth,\n      height: this.props.height ? this.props.height : this.sizeRef.current.clientHeight\n    };\n    this.Plane = this.canvasRef.current;\n    this.Plane.width = this.state.width;\n    this.Plane.height = this.state.height;\n    this.Canvas = this.Plane.getContext(\"2d\");\n    this.Animations = animations(this.state.width, this.state.height);\n    this.Builders = builders(this.Canvas);\n    this.Offset = this.Plane.getBoundingClientRect();\n\n    if (this.props.animations) {\n      this.props.animations.map(anim => this.addAnimation(anim.name, {\n        x: this.state.width * anim.x / 100,\n        y: this.state.height * anim.y / 100\n      }, anim.particleColor));\n    }\n\n    this.play();\n  }\n\n  addAnimation(animationName, coords, particleColor) {\n    const state = this.state;\n\n    const __add__ = inc => {\n      if (!state.animationsList[`${animationName}${inc}`]) {\n        state.animationsList[`${animationName}${inc}`] = this.Animations[animationName](this.Builders, coords, particleColor);\n        this.setState(state);\n      } else {\n        __add__(++inc);\n      }\n    };\n\n    __add__(0);\n  }\n\n  play() {\n    if (!this.state.suspendClear) this.Canvas.clearRect(0, 0, this.state.width, this.state.height);\n\n    for (let key in this.state.animationsList) {\n      this.state.animationsList[key](this.state.animationsList, key);\n    }\n\n    requestAnimationFrame(() => this.play());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Transition, {\n      trans: this.props.trans\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme\n    }, /*#__PURE__*/React.createElement(Particles, {\n      ref: this.sizeRef\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      onClick: e => {\n        if (this.props.onClickAnimation) {\n          this.addAnimation(this.props.onClickAnimation.name, {\n            x: this.props.onClickAnimation.x ? this.state.width * (this.props.onClickAnimation.x / 100) : e.clientX - this.Offset.left,\n            y: this.props.onClickAnimation.y ? this.state.height * (this.props.onClickAnimation.y / 100) : e.clientY - this.Offset.top\n          }, this.props.onClickAnimation.particleColor);\n        }\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/brocroberts/Documents/Code/titanesports/titan_draftv2/node_modules/arclight-react/dist/Particles/Particles.js"],"names":["React","styled","ThemeProvider","theme","builders","animations","Transition","Particles","div","Canvas","Component","constructor","props","sizeRef","createRef","canvasRef","componentDidMount","state","suspendClear","animationsList","width","current","clientWidth","height","clientHeight","Plane","getContext","Animations","Builders","Offset","getBoundingClientRect","map","anim","addAnimation","name","x","y","particleColor","play","animationName","coords","__add__","inc","setState","clearRect","key","requestAnimationFrame","render","createElement","trans","ref","onClick","e","onClickAnimation","clientX","left","clientY","top"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport theme from \"../themes\";\nimport builders from \"./builders/builders\";\nimport animations from \"./animations/index\";\nimport { Transition } from \"../index\";\nconst Particles = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sizeRef = /*#__PURE__*/React.createRef();\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.state = {\n      suspendClear: false,\n      animationsList: {},\n      width: this.props.width ? this.props.width : this.sizeRef.current.clientWidth,\n      height: this.props.height ? this.props.height : this.sizeRef.current.clientHeight\n    };\n    this.Plane = this.canvasRef.current;\n    this.Plane.width = this.state.width;\n    this.Plane.height = this.state.height;\n    this.Canvas = this.Plane.getContext(\"2d\");\n    this.Animations = animations(this.state.width, this.state.height);\n    this.Builders = builders(this.Canvas);\n    this.Offset = this.Plane.getBoundingClientRect();\n\n    if (this.props.animations) {\n      this.props.animations.map(anim => this.addAnimation(anim.name, {\n        x: this.state.width * anim.x / 100,\n        y: this.state.height * anim.y / 100\n      }, anim.particleColor));\n    }\n\n    this.play();\n  }\n\n  addAnimation(animationName, coords, particleColor) {\n    const state = this.state;\n\n    const __add__ = inc => {\n      if (!state.animationsList[`${animationName}${inc}`]) {\n        state.animationsList[`${animationName}${inc}`] = this.Animations[animationName](this.Builders, coords, particleColor);\n        this.setState(state);\n      } else {\n        __add__(++inc);\n      }\n    };\n\n    __add__(0);\n  }\n\n  play() {\n    if (!this.state.suspendClear) this.Canvas.clearRect(0, 0, this.state.width, this.state.height);\n\n    for (let key in this.state.animationsList) {\n      this.state.animationsList[key](this.state.animationsList, key);\n    }\n\n    requestAnimationFrame(() => this.play());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Transition, {\n      trans: this.props.trans\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme\n    }, /*#__PURE__*/React.createElement(Particles, {\n      ref: this.sizeRef\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      onClick: e => {\n        if (this.props.onClickAnimation) {\n          this.addAnimation(this.props.onClickAnimation.name, {\n            x: this.props.onClickAnimation.x ? this.state.width * (this.props.onClickAnimation.x / 100) : e.clientX - this.Offset.left,\n            y: this.props.onClickAnimation.y ? this.state.height * (this.props.onClickAnimation.y / 100) : e.clientY - this.Offset.top\n          }, this.props.onClickAnimation.particleColor);\n        }\n      }\n    }))));\n  }\n\n}"]},"metadata":{},"sourceType":"module"}