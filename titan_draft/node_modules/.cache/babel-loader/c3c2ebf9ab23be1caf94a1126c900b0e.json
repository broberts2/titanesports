{"ast":null,"code":"const openSocket = require(\"socket.io-client\");\n\nconst config = require(\"../../server/config\");\n\nconst path = config.production ? \"https://titan-esports.org:7001\" : \"http://localhost:7001\";\nconst socket = openSocket(path);\nlet params = {};\nwindow.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, (m, key, value) => {\n  params[key] = value;\n});\nsocket.emit(\"join\", params);\nlet blockLobbyMusic = false;\nlet lobbyMusic = new Audio(require(\"./audio/Twisted Fate & Graves Login Screen - League of Legends.mp3\"));\nlobbyMusic.volume = 0;\nlobbyMusic.loop = true;\nlet music = new Audio(require(\"./audio/Gangplank, the Saltwater Scourge Login Screen - League of Legends.mp3\"));\nmusic.volume = 0;\nmusic.loop = true;\n\nconst duckLobbyMusic = async () => {\n  const decrement = 0.0075;\n\n  if (lobbyMusic.volume > 0) {\n    if (lobbyMusic.volume > decrement) {\n      lobbyMusic.volume -= decrement;\n    } else {\n      lobbyMusic.volume = 0;\n    }\n\n    await new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), 200);\n    });\n    return await duckLobbyMusic();\n  }\n\n  blockLobbyMusic = true;\n};\n\nmodule.exports = {\n  setVolume: e => {\n    if (!blockLobbyMusic) lobbyMusic.volume = e;\n    music.volume = e;\n  },\n  playLobbyMusic: () => lobbyMusic.play(),\n  emit_blue_ready: () => socket.emit(\"blue_ready\"),\n  emit_red_ready: () => socket.emit(\"red_ready\"),\n  emit_update: data => socket.emit(\"update\", data),\n  update: cb => {\n    socket.on(\"update\", data => {\n      let state = {\n        blueTime: data.draft.blueTime,\n        redTime: data.draft.redTime,\n        active: data.active,\n        glowColor: data.draft.finished ? \"transparent\" : data.draft.team > 0 ? \"red\" : \"blue\",\n        data: data.draft.data,\n        blue_ready: data.draft.blue_ready,\n        red_ready: data.draft.red_ready,\n        running: data.draft.running,\n        finished: data.draft.finished,\n        turn: data.draft.turn,\n        team: data.draft.team,\n        t1_name: data.draft.t1_name,\n        t1_logo: data.draft.t1_logo,\n        t2_name: data.draft.t2_name,\n        t2_logo: data.draft.t2_logo,\n        modal: false\n      };\n\n      if (data.blue_captain) {\n        state.blue_captain = true;\n      } else if (data.red_captain) {\n        state.red_captain = true;\n      }\n\n      cb(state);\n\n      if (data.champion && data.pick) {\n        let audio = new Audio(data.champion[data.action === \"pick\" ? \"pickAudio\" : \"banAudio\"]);\n        audio.volume = 0.1;\n        audio.play();\n      }\n    });\n    socket.on(\"emit_countdown\", () => {\n      music.play();\n      duckLobbyMusic();\n      cb({\n        countdown: true\n      });\n    });\n    socket.on(\"play-music\", () => {\n      music.play();\n      duckLobbyMusic();\n    });\n    socket.on(\"invalid code\", () => {\n      cb({\n        error: \"Lobby not found\"\n      });\n    });\n  }\n};","map":{"version":3,"sources":["/Users/brocroberts/Documents/Code/titanesports/titan_draft/src/emitters.js"],"names":["openSocket","require","config","path","production","socket","params","window","location","href","replace","m","key","value","emit","blockLobbyMusic","lobbyMusic","Audio","volume","loop","music","duckLobbyMusic","decrement","Promise","resolve","reject","setTimeout","module","exports","setVolume","e","playLobbyMusic","play","emit_blue_ready","emit_red_ready","emit_update","data","update","cb","on","state","blueTime","draft","redTime","active","glowColor","finished","team","blue_ready","red_ready","running","turn","t1_name","t1_logo","t2_name","t2_logo","modal","blue_captain","red_captain","champion","pick","audio","action","countdown","error"],"mappings":"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","sourcesContent":["const openSocket = require(\"socket.io-client\");\nconst config = require(\"../../server/config\");\nconst path = config.production\n  ? \"https://titan-esports.org:7001\"\n  : \"http://localhost:7001\";\nconst socket = openSocket(path);\nlet params = {};\nwindow.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, (m, key, value) => {\n  params[key] = value;\n});\n\nsocket.emit(\"join\", params);\n\nlet blockLobbyMusic = false;\n\nlet lobbyMusic = new Audio(\n  require(\"./audio/Twisted Fate & Graves Login Screen - League of Legends.mp3\")\n);\nlobbyMusic.volume = 0;\nlobbyMusic.loop = true;\n\nlet music = new Audio(\n  require(\"./audio/Gangplank, the Saltwater Scourge Login Screen - League of Legends.mp3\")\n);\nmusic.volume = 0;\nmusic.loop = true;\n\nconst duckLobbyMusic = async () => {\n  const decrement = 0.0075;\n  if (lobbyMusic.volume > 0) {\n    if (lobbyMusic.volume > decrement) {\n      lobbyMusic.volume -= decrement;\n    } else {\n      lobbyMusic.volume = 0;\n    }\n    await new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), 200);\n    });\n    return await duckLobbyMusic();\n  }\n  blockLobbyMusic = true;\n};\n\nmodule.exports = {\n  setVolume: (e) => {\n    if (!blockLobbyMusic) lobbyMusic.volume = e;\n    music.volume = e;\n  },\n  playLobbyMusic: () => lobbyMusic.play(),\n  emit_blue_ready: () => socket.emit(\"blue_ready\"),\n  emit_red_ready: () => socket.emit(\"red_ready\"),\n  emit_update: (data) => socket.emit(\"update\", data),\n  update: (cb) => {\n    socket.on(\"update\", (data) => {\n      let state = {\n        blueTime: data.draft.blueTime,\n        redTime: data.draft.redTime,\n        active: data.active,\n        glowColor: data.draft.finished\n          ? \"transparent\"\n          : data.draft.team > 0\n          ? \"red\"\n          : \"blue\",\n        data: data.draft.data,\n        blue_ready: data.draft.blue_ready,\n        red_ready: data.draft.red_ready,\n        running: data.draft.running,\n        finished: data.draft.finished,\n        turn: data.draft.turn,\n        team: data.draft.team,\n        t1_name: data.draft.t1_name,\n        t1_logo: data.draft.t1_logo,\n        t2_name: data.draft.t2_name,\n        t2_logo: data.draft.t2_logo,\n        modal: false,\n      };\n      if (data.blue_captain) {\n        state.blue_captain = true;\n      } else if (data.red_captain) {\n        state.red_captain = true;\n      }\n      cb(state);\n      if (data.champion && data.pick) {\n        let audio = new Audio(\n          data.champion[data.action === \"pick\" ? \"pickAudio\" : \"banAudio\"]\n        );\n        audio.volume = 0.1;\n        audio.play();\n      }\n    });\n    socket.on(\"emit_countdown\", () => {\n      music.play();\n      duckLobbyMusic();\n      cb({ countdown: true });\n    });\n    socket.on(\"play-music\", () => {\n      music.play();\n      duckLobbyMusic();\n    });\n    socket.on(\"invalid code\", () => {\n      cb({\n        error: \"Lobby not found\",\n      });\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"script"}